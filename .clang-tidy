---
Checks: >
  -*,
  bugprone-*,
  readability-*,
  performance-*,
  cert-*,
  misc-*,
  openmp-*,mpi-*
  cppcoreguidelines-*,

  google-readability-*
  google-runtime-*,-google-runtime-int
  google-build-*,
  google-explicit-constructor,

  concurrency-*,
  clang-analyzer-valist*,clang-analyzer-core*,clang-analyzer-cplusplus*,

  fuchsia-statically-constructed-objects,
  fuchsia-trailing-return,
  fuchsia-virtual-inheritance,
  fuchsia-multiple-inheritance,

  hicpp-avoid-goto,
  hicpp-exception-baseclass,
  hicpp-multiway-paths-covered,
  hicpp-no-assembler,
  hicpp-signed-bitwise,

  boost-use-to-string,

  modernize-avoid-c-arrays,
  readability-isolate-declaration,
  modernize-avoid-bind,
  modernize-concat-nested-namespaces,
  modernize-deprecated-headers,
  modernize-deprecated-ios-base-aliases,
  modernize-loop-convert,
  modernize-make-shared,
  modernize-make-unique,
  modernize-pass-by-value,
  modernize-redundant-void-arg,
  modernize-replace-auto-ptr,
  modernize-replace-disallow-copy-and-assign-macro,
  modernize-replace-random-shuffle,
  modernize-return-braced-init-list,
  modernize-shrink-to-fit,
  modernize-unary-static-assert,
  modernize-use-bool-literals,
  modernize-use-default-member-init,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-nodiscard,
  modernize-use-noexcept,
  modernize-use-nullptr,
  modernize-use-override,
  modernize-use-transparent-functors,
  modernize-use-uncaught-exceptions,
  modernize-use-using,
WarningsAsErrors: '*'
HeaderFilterRegex: ''
FormatStyle:     none
CheckOptions:
  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: '1'
  - key: hicpp-signed-bitwise.IgnorePositiveIntegerLiterals
    value: '1'
  - key: readability-function-size.LineThreshold
    value: 500
  - key: readability-function-cognitive-complexity.Threshold
    value: 25
  - { key: readability-identifier-naming.MacroDefinitionPrefix, value: WC_LIB_ }
  - { key: readability-identifier-naming.NamespaceCase, value: camelBack }
  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ClassCase,     value: CamelCase }
  - { key: readability-identifier-naming.StructCase,    value: CamelCase }
  - { key: readability-identifier-naming.UnionCase,      value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,      value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: aNy_CasE }
  - { key: readability-identifier-naming.TypedefCase, value: aNy_CasE }
  - { key: readability-identifier-naming.VariableCase,  value: lower_case }
  - { key: readability-identifier-naming.VariableIgnoredRegexp,  value: '\b\w+\d+\b' }
  - { key: readability-identifier-naming.FunctionCase,  value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,  value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,  value: _ }
  - { key: readability-identifier-naming.ParameterCase, value: lower_case }
